# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger: none
pr: none

name: 0.9.$(rev:r)

pool:
  vmImage: 'ubuntu-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  AssemblyCompany: 'Majorsoft'
  AssemblyAuthor: 'Imre Toth'
  AssemblyProduct: 'Majorsoft Blazor Components'
  AssemblyCopyright: 'Copyright Â© 2020 Majorsoft'
  #AssemblyVersion: '$(Build.BuildNumber)'
  #PreviewPackageVersion: '-rc.1.20452.10'

jobs:
  - job: BuildAndPublish
    displayName: Package Nuget
    steps:

    - task: UseDotNet@2
      displayName: Install .NET 5
      inputs:
       packageType: 'sdk'
       version: '5.0.100-rc.1.20452.10' # replace this value with the version that you need for your project

    - task: Assembly-Info-NetCore@2
      displayName: 'Update Web Assembly Info'
      inputs:
        Path: '$(Build.SourcesDirectory)'
        FileNames: '/src/**/*.csproj'
        InsertAttributes: true
        FileEncoding: 'auto'
        WriteBOM: false
        Authors: '$(AssemblyAuthor)'
        Company: '$(AssemblyCompany)'
        Product: '$(AssemblyProduct)'
        Description: 'Blazor Components by Imre Toth'
        Copyright: '$(AssemblyCopyright)'
        RepositoryType: 'Git'
        VersionNumber: '$(AssemblyVersion)'
        FileVersionNumber: '$(AssemblyVersion)'
        InformationalVersion: '$(AssemblyVersion)'
        PackageVersion: '$(AssemblyVersion)'
        GeneratePackageOnBuild: false
        LogLevel: 'verbose'
        FailOnWarning: false
        DisableTelemetry: false

    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore packages'
      inputs:
        command: 'restore'
        projects: 'src/Blazor.Components.sln'
        feedsToUse: 'select'

    # - task: PowerShell@2
    #   displayName: Update Nuget package vesion
    #   inputs:
    #     targetType: 'inline'
    #     script: |
    #       $version = '$(AssemblyVersion)' + '$(PreviewPackageVersion)'
    #       Write-Host $version
    #       $newVersion = "<Version>" + $version + "<`/Version>"
    #       Write-Host $newVersion
    #       $verRegex = '<Version>.*'
    #       $nugetRegex = '(<PackageReference\s+Include="Majorsoft\.Blazor\..* Version=")([rc0-9\.-]*)(".*)'
    #       Get-ChildItem -Path src/**/*.csproj | % {
    #         $file = $_.FullName
    #         Write-Host $file
    #         (Get-Content -path $file -Raw) -replace $verRegex, $newVersion | Set-Content -Path $file
    #         (Get-Content -path $file -Raw) -replace $nugetRegex, "`${1}$version`${3}" | Set-Content -Path $file
    #       }

    - task: DotNetCoreCLI@2
      displayName: 'dotnet pack'
      inputs:
        command: 'pack'
        packagesToPack: '**/*.csproj'
        nobuild: true
        includesymbols: true
        arguments: '--configuration $(buildConfiguration) -p:PackageVersion=$(AssemblyVersion)$(PreviewPackageVersion)'

    # - task: DotNetCoreCLI@2
    #   displayName: 'dotnet build'
    #   inputs:
    #     command: 'build'
    #     projects: '**/*.csproj'
    #     arguments: '--configuration $(buildConfiguration)'
    #     workingDirectory: src/

    - task: DotNetCoreCLI@2
      displayName: 'run tests'
      inputs:
       command: 'test'
       projects: '**/*.Tests.csproj'
       arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet upload Nuget'
      inputs:
        command: 'push'
        packagesToPush: '**/*.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: '06db9479-0904-487a-9688-bfd150241ec7/70fe8fb2-40b5-4afd-acc9-66ba1c22bfb0'
