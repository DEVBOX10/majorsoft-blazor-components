export function requestPermission(n){Notification.requestPermission().then(function(t){n&&n.invokeMethodAsync("PermissionResult",t)}).catch()}export function checkPermission(){return Notification.permission}export function checkMaxActions(){return Notification.maxActions}export function isBrowserSupported(){return"Notification"in window?!0:!1}export function showWithActions(n,t,i){n&&t&&(navigator.serviceWorker.register("_content/Majorsoft.Blazor.Components.Notifications/sw.js"),navigator.serviceWorker.getRegistrations().then(function(n){n&&(i&&self.addEventListener("notificationclick",function(n){n.notification.close();n.action&&actionDotnetRef.invokeMethodAsync("ActionsCallback",n.action);i.invokeMethodAsync("OnClick")},!1),n[0].showNotification(t.title,t))}))}export function showSimple(n,t,i){if(n&&t){let r=new Notification(t.title,t);return i&&(r.onshow=n=>{i.invokeMethodAsync("OnOpen"),console.log(n)},r.onclose=n=>{i.invokeMethodAsync("OnClose"),console.log(n)},r.onerror=n=>{i.invokeMethodAsync("OnError"),console.log(n)},r.onclick=n=>{console.log(n),i.invokeMethodAsync("OnClick")}),r}}export function close(n){!n}export function dispose(){}