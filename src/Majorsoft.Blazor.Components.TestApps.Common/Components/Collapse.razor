<h1>Collapse Components</h1>
<p>
	Blazor component that renders customizable Collapsable/Expandable panel and Accordion with many but only one active panel also custom content and header. For usege see soruce code and docs on
	<a href="https://github.com/majorimi/blazor-components/blob/master/.github/docs/Collapse.md" target="_blank">Github</a>.
	<br /><strong>Majorsoft.Blazor.Components.Collapse</strong> package is available on <a href="https://www.nuget.org/packages/Majorsoft.Blazor.Components.Collapse" target="_blank">Nuget</a>
</p>

<div class="container-fluid p-3 mb-3 border rounded">
	<h3>CollapsePanel</h3>
	<p>Renders <strong><code>CollapsePanel</code> component </strong> which is an <strong> Expandable and Collapsable panel</strong> with custumizable header and content.</p>

	<div class="row pb-2">
		<div class="col-12 col-lg-8 col-xl-5">
			Collapsed color (Name, RGB, Hex, HSL): <input class="form-control w-100" @bind="_collapsedColor" />
		</div>
	</div>
	<div class="row pb-2">
		<div class="col-12 col-lg-8 col-xl-5">
			Expanded color (Name, RGB, Hex, HSL): <input class="form-control w-100" @bind="_expandedColor" />
		</div>
	</div>
	<div class="row pb-2">
		<div class="col-12 col-lg-8 col-xl-5">
			Hover color (Name, RGB, Hex, HSL): <input class="form-control w-100" @bind="_hoverColor" />
		</div>
	</div>
	<div class="row pb-2">
		<div class="col-12 col-lg-8 col-xl-5">
			CollapsePanel contet Height (0 is auto): @(_height)px
			<input type="range" class="w-100" min="0" max="400" @bind="_height" @oninput="(e => _height = int.Parse(e.Value?.ToString()))" />
		</div>
	</div>

	<div class="row pb-2">
		<div class="col-12 col-lg-8 col-xl-5">
			CollapsePanel Disabled: <input class="mr-3" type="checkbox" @bind="_isCollapseDisabled" />
			Collapsed: <input class="mr-3" type="checkbox" @bind="_isCollapsed" />
			<br />
			Animate Collapse changes: <input class="mr-3" type="checkbox" @bind="_isAnimated" />
		</div>
	</div>

	<div class="row mb-3">
		<div class="col-12">
			<CollapsePanel CollapsedColor="@_collapsedColor"
						   ExpandedColor="@_expandedColor"
						   HoverColor="@_hoverColor"
						   Disabled="@_isCollapseDisabled"
						   Collapsed="@_isCollapsed"
						   ContentHeight="@_height"
						   OnCollapseChanged="OnCollapsed">
				<CollapsedHeaderContent>
					<div class="w-100">
						<h5>Expand me</h5>
						<span class="fa fa-lg fa-chevron-circle-down" aria-hidden="true"></span>
					</div>
				</CollapsedHeaderContent>
				<ExpandedHeaderContent>
					<div class="w-100">
						<h5>Collapse me</h5>
						<span class="fa fa-lg fa-chevron-circle-up" aria-hidden="true"></span>
					</div>
				</ExpandedHeaderContent>
				<Content>
					<div style="border: 1px solid gray; height: 100%;">
						This is the content
					</div>
				</Content>
			</CollapsePanel>
		</div>
	</div>

	<div class="row pb-2">
		<div class="col-12">
			<label><strong>Collapse Event log</strong>:</label>
			<textarea @ref="_log" @bind="_collapseLog" style="height:200px;" class="form-control w-100" readonly></textarea>
		</div>
	</div>
</div>

<div class="container-fluid p-3 mb-3 border rounded">
	<h3>Accordion</h3>
	<p>
		Renders <strong> a set of <code>CollapsePanel</code> components </strong> which is an <strong> Expandable and Collapsable panel</strong> with custumizable header and content.
		But <code>Accordion</code> allows only one Expanded (active) panel.
	</p>

	<div class="row pb-2">
		<div class="col-12 col-lg-8 col-xl-5">
			Active tab color (Name, RGB, Hex, HSL): <input class="form-control w-100" @bind="_accordionActiveColor" />
		</div>
	</div>
	<div class="row pb-2">
		<div class="col-12 col-lg-8 col-xl-5">
			Inactive tabs color (Name, RGB, Hex, HSL): <input class="form-control w-100" @bind="_accordionInactiveColor" />
		</div>
	</div>
	<div class="row pb-2">
		<div class="col-12 col-lg-8 col-xl-5">
			Tabs Hover color (Name, RGB, Hex, HSL): <input class="form-control w-100" @bind="_accordionHoverColor" />
		</div>
	</div>

	<Accordion>

	</Accordion>

</div>

@code {
	//Collapse
	private string _collapsedColor = "DodgerBlue";
	private string _expandedColor = "LightBlue";
	private string _hoverColor = "LightGray";
	private bool _isAnimated = true;
	private bool _isCollapseDisabled = false;
	private bool _isCollapsed = false;
	private int _height = 100;

	private ElementReference _log;
	private string _collapseLog;

	private async Task OnCollapsed(bool state)
	{
		_isCollapsed = state;
		_collapseLog = WriteLog(_collapseLog, $"Collapse panel state has changed event Collapsed: {state}");
		await _log.ScrollToEndAsync();
	}

	//Accordion
	private string _accordionActiveColor = "";
	private string _accordionInactiveColor = "";
	private string _accordionHoverColor = "";


	private string WriteLog(string log, string message)
	{
		log += $"{DateTime.Now.TimeOfDay}: {message}. \r\n";
		return log;
	}
}