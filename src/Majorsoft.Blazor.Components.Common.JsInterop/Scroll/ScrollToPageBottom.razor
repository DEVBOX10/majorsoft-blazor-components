@if (_isVisible)
{
    <div class="scrollToPageBottom" @onclick="async () => await _scrollHandler.ScrollToPageEndAsync(SmootScroll)">
        @Content
    </div>
}

<style>
    .scrollToPageBottom {
        position: fixed;
        top: 5rem;
        right: 1.5rem;
        z-index: 20;
        cursor: pointer;
    }
</style>

@implements IAsyncDisposable
@inject IScrollHandler _scrollHandler;

@code { 
    private bool _isVisible = true;

    protected override async Task OnInitializedAsync()
    {
        await _scrollHandler.RegisterPageScrollAsync(async (e) =>
        {

        });
    }

    /// <summary>
    /// 
    /// </summary>
    [Parameter] public RenderFragment Content { get; set; }

    /// <summary>
    /// 
    /// </summary>
    [Parameter] public bool SmootScroll { get; set; } = true;

    public async ValueTask DisposeAsync()
    {
        if (_scrollHandler is not null)
        {
            await _scrollHandler.DisposeAsync();
        }
    }
}