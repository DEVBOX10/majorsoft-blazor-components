<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Majorsoft.Blazor.Components.Common.JsInterop</name>
    </assembly>
    <members>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Click.ClickBoundariesEventInfo">
            <summary>
            ClickBoundariesEventInfo event <see cref="T:Microsoft.JSInterop.DotNetObjectReference"/> info to handle JS callback
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Click.ClickBoundariesHandler">
            <summary>
            Implementation of <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.Click.IClickBoundariesHandler"/>
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Click.IClickBoundariesHandler">
            <summary>
            Injectable service to handle JS 'click' events for the whole document.
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Click.IClickBoundariesHandler.RegisterClickBoundariesAsync(Microsoft.AspNetCore.Components.ElementReference,System.Func{Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Threading.Tasks.Task},System.Func{Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Threading.Tasks.Task})">
            <summary>
            Adds event listener for 'click' HTML event for the given element with property filter.
            </summary>
            <param name="elementRef">Blazor reference to an HTML element</param>
            <param name="outsideClickCallback">Func to call when clicked outside of the given element</param>
            <param name="insideClickCallback">Func to call when clicked inside of the given element</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Click.IClickBoundariesHandler.RemoveClickBoundariesAsync(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Removes event listener for 'click' HTML event for the given element.
            </summary>
            <param name="elementRef">Blazor reference to an HTML element</param>
            <returns>Async Task</returns>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Click.ClickBoundariesElement.Content">
            <summary>
            HTML Content of Click detection element.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Click.ClickBoundariesElement.OnOutsideClick">
            <summary>
            Callback function called when clicked outside of the given element.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Click.ClickBoundariesElement.OnInsideClick">
            <summary>
            Callback function called when clicked inside of the given element.
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Clipboard.ClipboardExtensions">
            <summary>
            Static class for extension methods
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Clipboard.ClipboardExtensions.CopyElementTextToClipboardAsync(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Copies the given element text content to clipboard.
            </summary>
            <param name="elementReference">ElementReference to get text</param>
            <returns>Async Task</returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Clipboard.ClipboardHandler">
            <summary>
            Implementation of <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.Clipboard.IClipboardHandler"/>
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Clipboard.IClipboardHandler">
            <summary>
            Injectable service to handle JS 'copy' to clipboard Interops.
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Clipboard.IClipboardHandler.CopyElementTextToClipboardAsync(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Copies the given element text content to clipboard.
            </summary>
            <param name="elementReference">ElementReference to get text</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Clipboard.IClipboardHandler.CopyTextToClipboardAsync(System.String)">
            <summary>
            Copies the given text content to clipboard.
            </summary>
            <param name="elementReference">Text to copy</param>
            <returns>Async Task</returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.ElementInfo.ElementReferenceInfoExtensions">
            <summary>
            Static class for <see cref="T:Microsoft.AspNetCore.Components.ElementReference"/> extension methods.
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.ElementInfo.ElementReferenceInfoExtensions.GetClientRectAsync(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Returns the given HTML element ClintBoundRect data.
            </summary>
            <param name="elementReference">Blazor reference to an HTML element</param>
            <returns>Async Task with <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.ElementInfo.DomRect"/> value</returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Focus.FocusHandler">
            <summary>
            Implementation of <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.Focus.IFocusHandler"/>
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Focus.IFocusHandler">
            <summary>
            Injectable service to handle JS 'focus' Interops.
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Focus.IFocusHandler.GetFocusedElementAsync">
            <summary>
            Returns the actually focused HTML DOM element reference. It works with outside element of a Blazor component.
            Note: <see cref="T:Microsoft.JSInterop.IJSObjectReference"/> object is disposable.
            </summary>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Focus.IFocusHandler.FocusElementAsync(Microsoft.JSInterop.IJSObjectReference)">
            <summary>
            Sets focus on the given HTML DOM element reference
            Note: <see cref="T:Microsoft.JSInterop.IJSObjectReference"/> object is disposable.
            </summary>
            <param name="objectReference">IJSObjectReference to set focus on</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Focus.IFocusHandler.FocusElementAsync(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Sets focus on the given HTML DOM element reference
            </summary>
            <param name="elementReference">ElementReference to set focus on</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Focus.IFocusHandler.StoreFocusedElementAsync">
            <summary>
            Stores the actually focused HTML DOM element reference into a JS variable. This can be restored by calling <code>RestoreStoredElementFocusAsync</code> method.
            </summary>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Focus.IFocusHandler.RestoreStoredElementFocusAsync(System.Boolean)">
            <summary>
            Restores the HTML DOM element reference stored by calling <code>StoreFocusedElementAsync</code> method.
            </summary>
            <returns>Async Task</returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.GlobalMouseEventHandler">
            <summary>
            Implementation of <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.IGlobalMouseEventHandler"/>
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.IGlobalMouseEventHandler">
            <summary>
            Injectable service to handle JS document/window 'mouse' events for the whole document.
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.IGlobalMouseEventHandler.RegisterPageMouseMoveAsync(System.Func{Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Threading.Tasks.Task})">
            <summary>
            Adds event listener for mouse 'move' HTML event for the whole document/window.
            </summary>
            <param name="mouseMoveCallback">Func to call when mouse move happened</param>
            <returns>Async Task with event id to unsubscribe from event</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.IGlobalMouseEventHandler.RemovePageMouseMoveAsync(System.String)">
            <summary>
            Removes event listener for mouse 'move' HTML event for the whole document/window by the given event Id.
            </summary>
            <param name="eventId">Event id from <see cref="M:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.IGlobalMouseEventHandler.RegisterPageMouseMoveAsync(System.Func{Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Threading.Tasks.Task})"/></param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.IGlobalMouseEventHandler.RegisterPageMouseDownAsync(System.Func{Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Threading.Tasks.Task})">
            <summary>
            Adds event listener for mouse 'down' HTML event for the whole document/window.
            </summary>
            <param name="mouseDownCallback">Func to call when mouse down happened</param>
            <returns>Async Task with event id to unsubscribe from event</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.IGlobalMouseEventHandler.RemovePageMouseDownAsync(System.String)">
            <summary>
            Removes event listener for mouse 'down' HTML event for the whole document/window by the given event Id.
            </summary>
            <param name="eventId">Event id from <see cref="M:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.IGlobalMouseEventHandler.RegisterPageMouseDownAsync(System.Func{Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Threading.Tasks.Task})"/></param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.IGlobalMouseEventHandler.RegisterPageMouseUpAsync(System.Func{Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Threading.Tasks.Task})">
            <summary>
            Adds event listener for mouse 'up' HTML event for the whole document/window.
            </summary>
            <param name="mouseUpCallback">Func to call when mouse move happened</param>
            <returns>Async Task with event id to unsubscribe from event</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.IGlobalMouseEventHandler.RemovePageMouseUpAsync(System.String)">
            <summary>
            Removes event listener for mouse 'up' HTML event for the whole document/window by the given event Id.
            </summary>
            <param name="eventId">Event id from <see cref="M:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.IGlobalMouseEventHandler.RegisterPageMouseUpAsync(System.Func{Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Threading.Tasks.Task})"/></param>
            <returns>Async Task</returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.PageMouseEventInfo">
            <summary>
            PageMouseEventInfo event <see cref="T:Microsoft.JSInterop.DotNetObjectReference"/> info to handle JS callback
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.ResizeEventArgs">
            <summary>
            Custom defined event args for Resize events
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.ResizeEventArgs.Height">
            <summary>
            Element or Window height
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.ResizeEventArgs.Width">
            <summary>
            Element or Window width
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.ResizeEventArgs.EventId">
            <summary>
            Registered event id
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.ResizeEventInfo">
            <summary>
            PageResizeEventInfo event <see cref="T:Microsoft.JSInterop.DotNetObjectReference"/> info to handle JS callback
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.JsInteropExtension">
            <summary>
            Extension methods to register required JS Interop services into IServiceCollection
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.JsInteropExtension.AddJsInteropExtensions(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Registers required JS Interop services into IServiceCollection
            </summary>
            <param name="services">IServiceCollection instance</param>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Language.ILanguageService">
            <summary>
            Injectable service to handle Browser language Interops.
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Language.ILanguageService.GetBrowserLanguageAsync">
            <summary>
            Returns the browser preferred language.
            </summary>
            <returns>Async Task</returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Language.LanguageService">
            <summary>
            Implementation of <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.Language.ILanguageService"/>
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Resize.IResizeHandler">
            <summary>
            Injectable service to handle JS 'resize' events for HTML element or the whole document.
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Resize.IResizeHandler.RegisterPageResizeAsync(System.Func{Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.ResizeEventArgs,System.Threading.Tasks.Task})">
            <summary>
            Adds event listener for 'resize' HTML event for the whole document/window.
            </summary>
            <param name="resizeCallback">Func to call when page resize happened</param>
            <returns>Async Task with event id to unsubscribe from event</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Resize.IResizeHandler.RemovePageResizeAsync(System.String)">
            <summary>
            Removes event listener for 'resize' HTML event for the whole document/window by the given event Id.
            </summary>
            <param name="eventId">Event id from <see cref="M:Majorsoft.Blazor.Components.Common.JsInterop.Resize.IResizeHandler.RegisterPageResizeAsync(System.Func{Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.ResizeEventArgs,System.Threading.Tasks.Task})"/></param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Resize.IResizeHandler.GetPageSizeAsync">
            <summary>
            Returns Browser Window size (height and width in Pixel).
            </summary>
            <returns>Async Task with Window size</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Resize.IResizeHandler.RegisterResizeAsync(Microsoft.AspNetCore.Components.ElementReference,System.Func{Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.ResizeEventArgs,System.Threading.Tasks.Task})">
            <summary>
            Adds event listener for 'resize' HTML event for the given element with property filter.
            </summary>
            <param name="elementRef">Blazor reference to an HTML element</param>
            <param name="resizeCallback">Func to call when the given element was resized</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Resize.IResizeHandler.RemoveResizeAsync(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Removes event listener for 'resize' HTML event for the given element.
            </summary>
            <param name="elementRef">Blazor reference to an HTML element</param>
            <returns>Async Task</returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Resize.PageSize">
            <summary>
            Custom type to represent Browser Window size.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Resize.PageSize.Height">
            <summary>
            Browser Window height
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Resize.PageSize.Width">
            <summary>
            Browser Window width
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Resize.PageSize.ToString">
            <summary>
            PageSize string representation.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Resize.ResizeHandler">
            <summary>
            Implementation of <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.Resize.IResizeHandler"/>
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions">
            <summary>
            Extensions for <see cref="T:Microsoft.AspNetCore.Components.ElementReference"/> HTML elements.
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.ScrollToElementAsync(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Scrolls HTML page to given element
            </summary>
            <param name="elementReference">Blazor reference to an HTML element</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.ScrollToEndAsync(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Scrolls inside the given element to the bottom (end).
            </summary>
            <param name="elementReference">Blazor reference to an HTML element</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.ScrollToTopAsync(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Scrolls inside the given element to the beginning (top).
            </summary>
            <param name="elementReference">Blazor reference to an HTML element</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.ScrollToXAsync(Microsoft.AspNetCore.Components.ElementReference,System.Double)">
            <summary>
            Scrolls inside the given element to the given X position.
            </summary>
            <param name="elementReference">Blazor reference to an HTML element</param>
            <param name="xPos">Scroll X position</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.ScrollToYAsync(Microsoft.AspNetCore.Components.ElementReference,System.Double)">
            <summary>
            Scrolls inside the given element to the given Y position.
            </summary>
            <param name="elementReference">Blazor reference to an HTML element</param>
            <param name="yPos">Scroll Y position</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.GetScrollXPositionAsync(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Returns given element scroll X position.
            </summary>
            <param name="elementReference">Blazor reference to an HTML element</param>
            <returns>Async Task with X pos</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.IsElementHiddenAsync(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Returns given element is visible on HTML document or not.
            </summary>
            <param name="elementReference">Blazor reference to an HTML element</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.IsElementHiddenBelowAsync(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Returns given element is below of the view port.
            </summary>
            <param name="elementReference">Blazor reference to an HTML element</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.IsElementHiddenAboveAsync(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Returns given element is above of the view port.
            </summary>
            <param name="elementReference">Blazor reference to an HTML element</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.ScrollToElementInParentAsync(Microsoft.AspNetCore.Components.ElementReference,Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Scrolls inside the given parent element to the given inner element.
            </summary>
            <param name="parent">Blazor reference to an HTML (outer/wrapper) element</param>
            <param name="innerElement">Blazor reference to an inner HTML element to scroll to</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.ScrollInParentByIdAsync(Microsoft.AspNetCore.Components.ElementReference,System.String)">
            <summary>
            Scrolls inside the given parent element to the given inner element by Id.
            </summary>
            <param name="parent">Blazor reference to an HTML (outer/wrapper) element</param>
            <param name="id">Inner element Id to scroll to</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.ScrollInParentByClassAsync(Microsoft.AspNetCore.Components.ElementReference,System.String)">
            <summary>
            Scrolls inside the given parent element to the given first found inner element by class name.
            </summary>
            <param name="parent">Blazor reference to an HTML (outer/wrapper) element</param>
            <param name="className">Inner element CSS class to scroll to</param>
            <returns>Async Task</returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler">
            <summary>
            Injectable service to handle JS document/window 'scroll' events for the whole document.
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler.ScrollToElementAsync(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Scrolls the given element into the page view area.
            </summary>
            <param name="elementReference">Blazor reference to an HTML element</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler.ScrollToElementByIdAsync(System.String)">
            <summary>
            Finds element by Id and scrolls the given element into the page view area.
            </summary>
            <param name="name">DOM element id</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler.ScrollToElementByNameAsync(System.String)">
            <summary>
            Finds element by name and scrolls the given element into the page view area.
            </summary>
            <param name="name">DOM element name</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler.ScrollToPageEndAsync">
            <summary>
            Scrolls to end of the page (X bottom).
            </summary>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler.ScrollToPageTopAsync">
            <summary>
            Scrolls to top of the page (X top).
            </summary>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler.ScrollToPageXAsync(System.Double)">
            <summary>
            Scrolls to X position on the page.
            </summary>
            <param name="x">Scroll top x value</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler.ScrollToPageYAsync(System.Double)">
            <summary>
            Scrolls to Y position on the page.
            </summary>
            <param name="x">Scroll top x value</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler.GetPageScrollPosAsync">
            <summary>
            Returns page X,Y scroll position as <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollEventArgs"/>.
            </summary>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler.RegisterPageScrollAsync(System.Func{Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollEventArgs,System.Threading.Tasks.Task})">
            <summary>
            Adds event listener for 'scroll' HTML event for the whole document/window.
            </summary>
            <param name="scrollCallback">Func to call when scroll happened</param>
            <returns>Async Task with event id to unsubscribe from event</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler.RemovePageScrollAsync(System.String)">
            <summary>
            Removes event listener for 'scroll' HTML event for the whole document/window by the given event Id.
            </summary>
            <param name="eventId">Event id from <see cref="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler.RegisterPageScrollAsync(System.Func{Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollEventArgs,System.Threading.Tasks.Task})"/></param>
            <returns>Async Task</returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.PageScrollEventInfo">
            <summary>
            PageScrollEventInfo event <see cref="T:Microsoft.JSInterop.DotNetObjectReference"/> info to handle JS callback
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollHandler">
            <summary>
            Implementation of <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler"/>
            </summary>
        </member>
    </members>
</doc>
